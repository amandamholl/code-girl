{namespace Turtle.soy}

/**
 * This is a Closure Template.
 *
 * To regenerate just English, run:
 *   make turtle-en
 *
 * To regenerate all languages, run:
 *   make languages
 */

/**
 * Translated messages for use in JavaScript.
 */
{template .messages}
  {call BlocklyGames.soy.messages /}
  <div style="display: none">
    // Block text and their associated tooltips and URLs (interleaved to
    // assist with translation).
    <span id="Turtle_moveTooltip">{msg meaning="Turtle.moveTooltip" desc="tooltip - In this and subsequent messages, 'turtle' refers to a stylized turtle on the screen to represent a position and direction.  This imaginary turtle is carrying a pen in its tail, so moving the turtle draws a line (or curve, etc.).  You are encouraged to play with the [https://blockly-demo.appspot.com/static/apps/turtle/index.html Turtle application] before doing this translation."}Moves the turtle forward or backward by the specified amount.{/msg}</span>
    <span id="Turtle_moveForward">{msg meaning="Turtle.moveForward" desc="[[Translating:Blockly#Drop-Down_Menus dropdown]] - Infinitive or imperative of a verb telling a turtle to move (walk) in the direction he/she is facing.  This is followed by a number indicating how far (how many pixels) to go.  Prefer a translation that has text in common with the translation of 'move backward'.  See [[Translating:Blockly#Drop-Down_Menus]]."}move forward by{/msg}</span>
    <span id="Turtle_moveBackward">{msg meaning="Turtle.moveBackward" desc="[[Translating:Blockly#Drop-Down_Menus dropdown]] - Infinitive or imperative of a verb telling a turtle to move (walk) in the direction opposite to where he/she is facing.  This is followed by a number indicating how far (how many pixels) to go.  Prefer a translation that has text in common with the translation of 'move forward'."}move backward by{/msg}</span>

    <span id="Turtle_turnTooltip">{msg meaning="Turtle.turnTooltip" desc="'Left' means counter-clockwise/anti-clockwise, and 'right' means clockwise."}Turns the turtle left or right by the specified number of degrees.{/msg}</span>
    <span id="Turtle_turnRight">{msg meaning="Turtle.turnRight" desc="[[Translating:Blockly#Drop-Down_Menus dropdown]] - Infinitive or imperative of verb telling a turtle to rotate clockwise.  This is followed by a number indicating how far (how many degrees) to turn.  Prefer a translation that has text in common with the translation of 'turn left by'."}turn right by{/msg}</span>
    <span id="Turtle_turnLeft">{msg meaning="Turtle.turnLeft" desc="[[Translating:Blockly#Drop-Down_Menus dropdown]] - Infinitive or imperative of verb telling a turtle to rotate counter-clockwise (anti-clockwise).  This is followed by a number indicating how far (how many degrees) to turn.  Prefer a translation that has text in common with the translation of 'turn right by'."}turn left by{/msg}</span>

    <span id="Turtle_widthTooltip">{msg meaning="Turtle.widthTooltip" desc="tooltip"}Changes the width of the pen.{/msg}</span>
    <span id="Turtle_setWidth">{msg meaning="Turtle.setWidth" desc="block text - Infinitive or imperative of a verb to set the width of the lines that should be drawn in the future by an imaginary pen.  This is followed by a number indicating the width in pixels (1 or greater)."}set width to{/msg}</span>

    <span id="Turtle_colourTooltip">{msg meaning="Turtle.colourTooltip" desc="tooltip - Changes the colour of ink in the pen carried by the turtle."}Changes the colour of the pen.{/msg}</span>
    <span id="Turtle_setColour">{msg meaning="Turtle.setColour" desc="block text - Infinitive or imperative of a verb to specify the colour of the lines that should be drawn in the future by an imaginary pen.  This is followed by a block showing the colour"}set colour to{/msg}</span>

    <span id="Turtle_penTooltip">{msg meaning="Turtle.penTooltip" desc="tooltip - Lifting the pen off the writing surface prevents anything from being drawn.  Lowering it (after it has been lifted) enables it to draw again."}Lifts or lowers the pen, to stop or start drawing.{/msg}</span>
    <span id="Turtle_penUp">{msg meaning="Turtle.penUp" desc="block text - Infinitive or imperative of a verb to lift up a pen so that moving it leaves no mark on the writing surface."}pen up{/msg}</span>
    <span id="Turtle_penDown">{msg meaning="Turtle.penDown" desc="block text - Infinitive or imperative of a verb to lower a raised pen so that moving it leaves a mark on the writing surface."}pen down{/msg}</span>

    <span id="Turtle_turtleVisibilityTooltip">{msg meaning="Turtle.turtleVisibilityTooltip" desc="tooltip"}Makes the turtle (circle and arrow) visible or invisible.{/msg}</span>
    <span id="Turtle_hideTurtle">{msg meaning="Turtle.hideTurtle" desc="block text - Infinitive or imperative of a verb telling a turtle to hide itself (become invisible)."}hide turtle{/msg}</span>
    <span id="Turtle_showTurtle">{msg meaning="Turtle.showTurtle" desc="block text - Infinitive or imperative of a verb telling a turtle to show itself (become visible after having been invisible)."}show turtle{/msg}</span>

    <span id="Turtle_printHelpUrl">{msg meaning="Turtle.printHelpUrl" desc="URL - Information about printing or typography."}https://en.wikipedia.org/wiki/Printing{/msg}</span>
    <span id="Turtle_printTooltip">{msg meaning="Turtle.printTooltip" desc="tooltip - Note that 'print' refers to displaying text on the screen, not on an external printer."}Draws text in the turtle's direction at its location.{/msg}</span>
    <span id="Turtle_print">{msg meaning="Turtle.print" desc="block text - Infinitive or imperative of a verb telling a turtle to display text on the screen.  This is always followed by a block indicating what should be printed."}print{/msg}</span>

    <span id="Turtle_fontHelpUrl">{msg meaning="Turtle.fontHelpUrl" desc="URL - Information about typographic fonts."}https://en.wikipedia.org/wiki/Font{/msg}</span>
    <span id="Turtle_fontTooltip">{msg meaning="Turtle.fontTooltip" desc="tooltip - This is shown on the block that lets the user specify the font [family], size, and style that should be used for subsequent displays of text."}Sets the font used by the print block.{/msg}</span>
    <span id="Turtle_font">{msg meaning="Turtle.font" desc="block text - This precedes a dropdown menu specifying the typographic font [family] that should be used when displaying text."}font{/msg}</span>
    <span id="Turtle_fontSize">{msg meaning="Turtle.fontSize" desc="block text - This precedes a number specifying the size of the typographic font that should be used when displaying text.  This appears in the same block as 'font', so that word should not be repeated."}font size{/msg}</span>
    <span id="Turtle_fontNormal">{msg meaning="Turtle.fontNormal" desc="[[Translating:Blockly#Drop-Down_Menus dropdown]] - Specifies that a typographic font should be normal (neither in italics or bold)."}normal{/msg}</span>
    <span id="Turtle_fontBold">{msg meaning="Turtle.fontBold" desc="[[Translating:Blockly#Drop-Down_Menus dropdown]] - Specifies that a typographic font should be [https://en.wikipedia.org/wiki/Emphasis_(typography) bold]."}bold{/msg}</span>
    <span id="Turtle_fontItalic">{msg meaning="Turtle.fontItalic" desc="[[Translating:Blockly#Drop-Down_Menus dropdown]] - Specifies that a typographic font should be [https://en.wikipedia.org/wiki/Italics italic]."}italic{/msg}</span>

    <span id="Turtle_submitDisabled">{msg meaning="Turtle.submitDisabled" desc="Error message."}Run your program until it stops. Then you may submit your drawing to the gallery.{/msg}</span>
  </div>
{/template}

/**
 * Web page structure.
 */
{template .start}
  {call .messages /}
  <div id="header">
    <div id="logo">
        <a href="./"> <img src="./index/horizontal-logo-01.png"></a>
    </div>
    <div class="farSide">
        <select id="languageMenu"></select>
        &nbsp;
        <button id="signoutButton" onClick="location.href='/'">
        {{msg meaning="Games.signout" desc="IBID"}}Signout{{/msg}}
        </button>
        <button id="linkButton" title="{msg meaning="Games.linkTooltip" desc="IBID"}Save and link to blocks.{/msg}">
          <img src="media/1x1.gif" class="link icon21">
        </button>
        &nbsp;
        <button id="helpButton">
          {{msg meaning="Games.help" desc="IBID"}}Help{{/msg}}
        </button>
    </div>
  </div>

  {call .toolbox /}
  <div id="blockly"></div>

  <div id="leftSide">
    <div id="visualization">
      <canvas id="scratch" width="400" height="400" style="display: none"></canvas>
      <canvas id="answer" width="400" height="400" style="display: none"></canvas>
      <canvas id="display" width="400" height="400"></canvas>
    </div>

    <table style="padding-top: 1em;">
      <tr>
        <td style="width: 190px; text-align: center; vertical-align: top;background-color:white; padding-top: 10px;">
          <svg
              id="slider"
              xmlns="http://www.w3.org/2000/svg"
              xmlns:svg="http://www.w3.org/2000/svg"
              xmlns:xlink="http://www.w3.org/1999/xlink"
              version="1.1"
              width="150"
              height="50">
            <!-- Slow icon. -->
            <clipPath id="slowClipPath">
              <rect width=26 height=12 x=5 y=14 />
            </clipPath>
            <image xlink:href="turtle/seaturtle.svg" height=32 width=74 x=-21 y=0 />
            <!-- Fast icon. -->
            <clipPath id="fastClipPath">
              <rect width=26 height=16 x=120 y=10 />
            </clipPath>
            <image xlink:href="turtle/bunny.svg" height=32 width=74 x=92 y=0 />
          </svg>
        </td>
        <td style="width: 15px;">
          <img id="spinner" style="visibility: hidden;" src="turtle/loading.gif" height=15 width=15>
        </td>
        <td style="width: 190px; text-align: center">
          <button id="runButton" class="primary" title="{msg meaning="Games.runTooltip" desc="IBID"}Run the program you wrote.{/msg}">
            <img src="media/1x1.gif" class="run icon21"> {msg meaning="Games.runProgram" desc="IBID"}Run Program{/msg}
          </button>
          <button id="resetButton" class="primary" style="display: none" title="{msg meaning="Games.resetTooltip" desc="IBID"}Stop the program and reset the level.{/msg}">
            <img src="media/1x1.gif" class="stop icon21"> {msg meaning="Games.resetProgram" desc="IBID"}Reset{/msg}
          </button>
        </td>
      </tr>
    </table>

  </div>

  {call BlocklyGames.soy.dialog /}
  {call BlocklyGames.soy.doneDialog /}
  {call BlocklyGames.soy.abortDialog /}
  {call BlocklyGames.soy.storageDialog /}
  {if $ij.level < 4}
    <div id="helpUseLoop" class="dialogHiddenContent">
      <div style="padding-bottom: 0.7ex">
        {msg meaning="Turtle.helpUseLoop" desc="Dialog telling user to seek a better answer."}
          Your solution works, but you can solve the challenge with fewer blocks. Try using "Loops."
        {/msg}
        {sp}
        {if $ij.level < 3}
          {msg meaning="Turtle.helpUseLoop3" desc="Dialog telling user to seek a simpler answer."}
            Draw the shape with just three blocks.
          {/msg}
        {else}
          {msg meaning="Turtle.helpUseLoop4" desc="Dialog telling user to seek a simpler answer."}
            Draw the star with just four blocks.
          {/msg}
        {/if}
      </div>
      {call BlocklyGames.soy.ok /}
    </div>
  {/if}

  <div id="help" class="dialogHiddenContent">
    <div style="padding-bottom: 0.7ex">
      {if $ij.level == 1}
        <h3> Learn Sequentiality! </h3>
        {msg meaning="Turtle.helpText1" desc="Instructions."}
            Put the blocks together to help the robot draw a square! Change the value of the fields to make the robot move correctly.
        {/msg}
        <br><img src="turtle/square.gif" height=146 width=146 style="margin-bottom: -50px">
      {/if}
    {if $ij.level == 2}
        <h3> Learn Loops! </h3>
        {msg meaning="Turtle.helpText1" desc="Instructions."}
          Now, use a loop from the toolbar to help the robot draw a square.
        {/msg}
     {/if}
    {if $ij.level == 3}
        {msg meaning="Turtle.helpText1" desc="Instructions."}
          Now, help the robot draw a hexagon using loops.
        {/msg}
     {/if}
    </div>
    {call BlocklyGames.soy.ok /}
  </div>

  {if $ij.level == 2}
    <div id="helpToolbox" class="dialogHiddenContent">
      <div><img src="turtle/help_left.png" class="mirrorImg" height=23 width=64></div>
      {msg meaning="Turtle.helpToolbox" desc="Instructions for accessing blocks that are hidden inside categories."}
        Choose a category to see the blocks.
      {/msg}
    </div>
  {/if}
{/template}

/**
 * Toolbox.
 */
{template .toolbox}
  <xml id="toolbox" style="display: none">
    
    
      <category name="{msg meaning="Turtle.catTurtle" desc="category - Blocks related to Turtle commands."}Directions{/msg}">
        <block type="turtle_move_internal">
        </block>
        {if $ij.level == 2}
          <block type="turtle_turn">
          </block>
        {/if}
        {if $ij.level == 3}
          <block type="turtle_turn_internal">
            <field name="VALUE">some</field>
          </block>
        {/if}
      </category>

      <category name="{msg meaning="Games.catLoops" desc="IBID"}Loops{/msg}">
        <block type="turtle_repeat_internal">
          <field name="TIMES">4</field>
        </block>
      </category>
  </xml>
{/template}

/**
 * Readonly Blockly in an iframe.
 */
{template .readonly}
  {call .messages /}
  <div id="blockly"></div>
{/template}
